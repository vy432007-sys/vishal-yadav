# Name of the workflow, which will be displayed in the Actions tab on GitHub
name: Build Flutter Android APK

# This section defines when the workflow will run.
# 'on: push:' means it runs every time you push code.
# 'branches: [ main ]' specifies it only runs for the 'main' branch.
on:
  push:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  # This workflow contains a single job called "build-apk"
  build-apk:
    # The type of virtual machine to run the job on. 'ubuntu-latest' is a standard choice.
    runs-on: ubuntu-latest

    # 'steps' represent a sequence of tasks that will be executed as part of the job.
    steps:
      # Step 1: Checks out your repository's code onto the runner
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Sets up the Java Development Kit (JDK), which is required for Android builds
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'

      # Step 3: Sets up the Flutter SDK on the runner
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.13.0' # You can change this to your Flutter version
          channel: 'stable'

      # Step 4: Gets all the project dependencies
      - name: Get Flutter dependencies
        run: flutter pub get

      # Step 5: Builds the release version of the Android APK
      - name: Build APK
        run: flutter build apk --release

      # Step 6: This is the crucial step that makes the APK downloadable.
      # It takes the generated file and uploads it as a "workflow artifact".
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk
